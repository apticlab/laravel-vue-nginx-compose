name: Deploy Production

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Github Docker Registry
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username apticlab --password-stdin
      - name: Copy the correct env to server
        run: cp envs/env.prod server/.env
      - name: Build Docker images
        run: docker-compose -f docker-compose.prod.yml build
      - name: Push Docker images
        run: docker-compose -f docker-compose.prod.yml push
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create ssh folder
        run: mkdir ~/.ssh
      - name: Install Private SSH key
        run: |
          touch ~/.ssh/id_rsa
          echo "${{ secrets.DOCKER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      - name: Install Public SSH key
        run: |
          touch ~/.ssh/id_rsa.pub
          echo "${{ secrets.DOCKER_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          cat ~/.ssh/id_rsa.pub
      - name: Set the right URL for the project
        run: URL=${PROD_APP_URL} docker-compose -f docker-compose.prod.yml config > docker-compose.deploy.yml
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_MANAGER_IP }}
          username: root
          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          source: "docker-compose.deploy.yml"
          target: "~/"
      - name: Deploy to Swarm
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u apticlab --password-stdin; docker stack deploy -c docker-compose.deploy.yml --with-registry-auth ${PROJECT_SLUG} && docker system prune -f && rm docker-compose.deploy.yml
          host: ${{ secrets.PROD_MANAGER_IP }}
          username: root
          privateKey: ${{ secrets.DOCKER_SSH_PRIVATE_KEY}}
